# Pipeline Module

from briareos.utils.modules import *

from http_object import HttpObject
import string


class GenericUrlExploitDetector(Module):
    name = "Generic URL Exploit Detector"
    description = "Drops packet and blocks client if the URL contains characters that are not allowed"

    input_type = HttpObject

    def __init__(self):
        self.whitelist = string.ascii_letters + string.digits + ":/?#[]@!$&()*+,;=$-_%"

    def is_bad_url(self, url):
        for c in url:
            if c not in self.whitelist:
                return True
        return False

    def process(self, packet, http_object):
        if self.is_bad_url(http_object.url):
            packet.drop()
            print("Dropping packet: (Endpoint: %s)" % http_object.url)
            packet.block_ip_address()

        # TODO httpObject.url = escape(http_object.url) # -> automatic packet payload?
