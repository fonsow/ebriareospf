package engine_modules;

import core.JMSInterface;
import engine_modules_helpers.*;
import org.apache.commons.validator.routines.UrlValidator;
import utils.BPacket;
import utils.Common;

public class GenericURLExploitDetector extends EngineModule {
    public GenericURLExploitDetector() {
        super(ModuleType.GenURLExploitDetector);
    }

    @Override
    public IOType getInputType() {
        return IOType.HTTPObject;
    }

    @Override
    public IOType getOutputType() {
        return IOType.None;
    }

    @Override
    public Common.InputMode getInputMode() {
        return Common.InputMode.SingleInput;
    }

    private boolean isBadURL(String url) {
        return new UrlValidator().isValid(url);
    }

    @Override
    public ModuleIO process(BPacket packet, ModuleIO data, JMSInterface jmsInterface) {
        if (data.ioType != IOType.HTTPObject) {
            System.out.println("-- GenURLExploit --");
            System.out.println("Data's type is not the same as the data type needed by the module");
            System.exit(-1);
        }

        HttpObject httpObject = ((IOData.IOHttpObj) data.ioData).httpObject;
        if (isBadURL(httpObject.url)) {
            packet.drop();
            System.out.println("Dropping packet: (Endpoint " + httpObject.url + ")");
            System.out.println("Blocking packet's source IP address");

            if (jmsInterface != null)
                jmsInterface.blockIPAddress(packet);
            else
                packet.blockIPAddress();
        }

        return new ModuleIO();
    }
}
